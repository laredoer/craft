// Code generated by craft; DO NOT EDIT.

package proto

import (
	"context"
	"errors"
	"github.com/go-playground/validator/v10"
	"git.5th.im/lb-public/gear/util/metautil"
)

var validate_card_pb = validator.New(validator.WithRequiredStructEnabled())

type GetCardInfoReq_CardIdError struct{}

func (GetCardInfoReq_CardIdError) Trans(ctx context.Context) error {
	switch metautil.Language(ctx) {
	case "zh-HK":
		return errors.New("參數錯誤，卡券編號不能為空")
	case "zh-CN":
		return errors.New("参数错误，卡券编号不能为空")
	case "en":
		return errors.New("Parameter error, Card id cannot be empty")
	default:
		return errors.New("參數錯誤，卡券編號不能為空")
	}
}

type GetCardInfoReq_FirstNameError struct{}

func (GetCardInfoReq_FirstNameError) Trans(ctx context.Context) error {
	switch metautil.Language(ctx) {
	case "zh-HK":
		return errors.New("參數錯誤，名字不能為空")
	case "zh-CN":
		return errors.New("参数错误，名字不能为空")
	case "en":
		return errors.New("Parameter error, name cannot be empty")
	default:
		return errors.New("參數錯誤，名字不能為空")
	}
}

type GetCardInfoReq_AgeError struct{}

func (GetCardInfoReq_AgeError) Trans(ctx context.Context) error {
	switch metautil.Language(ctx) {
	case "zh-HK":
		return errors.New("參數錯誤，年齡必須在 0-130 之間")
	case "zh-CN":
		return errors.New("参数错误，年龄必须在 0-130 之间")
	case "en":
		return errors.New("Parameter error, age must be between 0-130")
	default:
		return errors.New("參數錯誤，年齡必須在 0-130 之間")
	}
}

type GetCardInfoReq_EmailError struct{}

func (GetCardInfoReq_EmailError) Trans(ctx context.Context) error {
	switch metautil.Language(ctx) {
	case "zh-HK":
		return errors.New("參數錯誤，郵箱格式錯誤")
	case "zh-CN":
		return errors.New("参数错误，邮箱格式错误")
	case "en":
		return errors.New("Parameter error, email format error")
	default:
		return errors.New("參數錯誤，郵箱格式錯誤")
	}
}

type GetCardInfoReq_ColorError struct{}

func (GetCardInfoReq_ColorError) Trans(ctx context.Context) error {
	switch metautil.Language(ctx) {
	case "zh-HK":
		return errors.New("參數錯誤，顏色格式錯誤")
	case "zh-CN":
		return errors.New("参数错误，颜色格式错误")
	case "en":
		return errors.New("Parameter error, color format error")
	default:
		return errors.New("參數錯誤，顏色格式錯誤")
	}
}

func (g *GetCardInfoReq) Validate(ctx context.Context) error {
	if err := validate_card_pb.Var(g.CardId,"required"); err != nil {
		return GetCardInfoReq_CardIdError.Trans(struct{}{},ctx)
	}

	if err := validate_card_pb.Var(g.FirstName,"required"); err != nil {
		return GetCardInfoReq_FirstNameError.Trans(struct{}{},ctx)
	}

	if err := validate_card_pb.Var(g.Age,"required,gte=0,lte=130"); err != nil {
		return GetCardInfoReq_AgeError.Trans(struct{}{},ctx)
	}

	if err := validate_card_pb.Var(g.Email,"required,email"); err != nil {
		return GetCardInfoReq_EmailError.Trans(struct{}{},ctx)
	}

	if err := validate_card_pb.Var(g.Gender,"oneof=male female prefer_not_to"); err != nil {
		return err
	}

	if err := validate_card_pb.Var(g.Color,"iscolor"); err != nil {
		return GetCardInfoReq_ColorError.Trans(struct{}{},ctx)
	}


	return nil
}

