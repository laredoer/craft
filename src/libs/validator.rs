use crate::{explainer::extension::Field, plugin::Plugin};

#[derive(Default, Debug)]
pub struct Validate;

impl Validate {
    pub fn new() -> Validate {
        Validate::default()
    }
}

impl Plugin for Validate {
    fn name(&self) -> &'static str {
        "Validate"
    }

    fn header(&self, package_name: &str) -> String {
        let mut header = String::new();
        header.push_str("// Code generated by craft; DO NOT EDIT.\n\n");
        header.push_str(&format!("package {}\n\n", package_name));
        header
    }

    fn build(&self, ts: gosyn::ast::TypeSpec, args: Vec<Field>) -> String {
        "".to_string()
    }
}
